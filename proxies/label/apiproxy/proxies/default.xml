<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules/>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>sharedAuthWithOkta</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <Flows>
        <Flow name="OptionsPreFlight">
            <Request/>
            <Response/>
            <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
        </Flow>
        <Flow name="GET/labels">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/labels") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="POST/labels">
            <Description/>
            <Request>
                <Step>
                    <Name>saasag.label_manage</Name>
                    <Condition>(is_jwt != true) OR !(request.header.scopes ~ "*label%.label_manage*")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/labels") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="GET/labels/*">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/labels/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="PUT/labels/*">
            <Description/>
            <Request>
                <Step>
                    <Name>saasag.label_manage</Name>
                    <Condition>(is_jwt != true) OR !(request.header.scopes ~ "*label%.label_manage*")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/labels/*") and (request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="DELETE/labels/*">
            <Description/>
            <Request>
                <Step>
                    <Name>saasag.label_delete</Name>
                    <Condition>(is_jwt != true) OR !(request.header.scopes ~ "*label%.label_delete*")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/labels/*") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="POST/media">
            <Description/>
            <Request>
                <Step>
                    <Name>saasag.label_manage</Name>
                    <Condition>(is_jwt != true) OR !(request.header.scopes ~ "*label%.label_manage*")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/media") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="DELETE/media/*">
            <Description/>
            <Request>
                <Step>
                    <Name>saasag.label_delete</Name>
                    <Condition>(is_jwt != true) OR !(request.header.scopes ~ "*label%.label_delete*")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/media/*") and (request.verb = "DELETE")</Condition>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>/label</BasePath>
        <Properties/>
    </HTTPProxyConnection>
    <RouteRule name="NoRoute">
        <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
    </RouteRule>
    <RouteRule name="k8s-prod">
        <Condition>environment.name ~ "*prod*"</Condition>
        <TargetEndpoint>k8s-prod</TargetEndpoint>
    </RouteRule>
    <RouteRule name="k8s-develop">
        <Condition>environment.name ~ "*dev*"</Condition>
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
    <RouteRule name="k8s-stage">
        <Condition>environment.name ~ "*stage*"</Condition>
        <TargetEndpoint>k8s-stage</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>